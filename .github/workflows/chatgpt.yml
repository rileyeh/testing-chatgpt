name: ChatGPT Code Review

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  chatgpt-review:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python environment
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install requests

      - name: Get list of changed files
        id: changed_files
        run: |
          BASE_SHA=$(git merge-base ${{ github.event.pull_request.base.sha }} ${{ github.sha }})
          echo "files=$(git diff --name-only $BASE_SHA ${{ github.sha }})" >> $GITHUB_OUTPUT

      - name: Review code with ChatGPT
        id: chatgpt_review
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          FILES="${{ steps.changed_files.outputs.files }}"
          RESPONSE=""
          for FILE in $FILES; do
            CODE=$(cat "$FILE")
            PROMPT="Review the following code from $FILE in the context of a pull request and provide feedback: $CODE"
            RESPONSE=$(curl -s https://api.openai.com/v1/chat/completions \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $OPENAI_API_KEY" \
              -d '{
                "model": "gpt-4",
                "messages": [{"role": "system", "content": "You are a code review assistant."},
                             {"role": "user", "content": "'"${PROMPT}"'"}]
              }')
            COMMENT=$(echo $RESPONSE | jq -r '.choices[0].message.content')
            echo "$COMMENT" >> review_comments.txt
          done

      - name: Post comments on PR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          COMMENTS=$(cat review_comments.txt)
          if [ -n "$COMMENTS" ]; then
            gh pr comment ${{ github.event.pull_request.number }} --body "$COMMENTS"
          else
            echo "No comments to post."
          fi

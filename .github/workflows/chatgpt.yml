name: ChatGPT Code Review

on:
  pull_request:
    types: [opened, synchronize]

permissions:
  pull-requests: write  # This grants the necessary permission to post comments on pull requests

jobs:
  chatgpt-review:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2  # Fetch minimal history to include the PR and its base commit

      - name: Get list of changed files
        id: changed_files
        run: |
          # Get the list of changed files between the PR branch and its base branch
          FILES=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.sha }})
          FILE_LIST=$(printf "%s\n" $FILES | paste -sd "," -)
          echo "files=$FILE_LIST" >> $GITHUB_OUTPUT

      - name: Review code with ChatGPT
        id: chatgpt_review
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          FILES="${{ steps.changed_files.outputs.files }}"
          RESPONSE=""
          IFS=',' read -ra ADDR <<< "$FILES"
          for FILE in "${ADDR[@]}"; do
            CODE=$(cat "$FILE")
            PROMPT="Review the following JavaScript code from $FILE in the context of a pull request and provide feedback."
            
            JSON_PAYLOAD=$(cat <<EOF
{
  "model": "gpt-4",
  "messages": [
    {"role": "system", "content": "You are a code review assistant."},
    {"role": "user", "content": "${PROMPT}\n\n${CODE}"}
  ]
}
EOF
)

            RESPONSE=$(curl -s https://api.openai.com/v1/chat/completions \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $OPENAI_API_KEY" \
              -d "$JSON_PAYLOAD")
              
            echo "Full API Response: $RESPONSE"
            COMMENT=$(echo $RESPONSE | jq -r '.choices[0].message.content')
            echo "Extracted Comment: $COMMENT"
            echo "$COMMENT" >> review_comments.txt
          done

      - name: Post comments on PR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ -f review_comments.txt ]; then
            COMMENTS=$(cat review_comments.txt)
            if [ -n "$COMMENTS" ]; then
              gh pr comment ${{ github.event.pull_request.number }} --body "$COMMENTS"
            else
              echo "No comments to post."
            fi
          else
            echo "No review comments generated."
          fi